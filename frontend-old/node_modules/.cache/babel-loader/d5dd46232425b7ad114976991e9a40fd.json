{"ast":null,"code":"import axios from 'axios';\nimport { REGISTER_FAIL, REGISTER_SUCCESS, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL } from \"../types/authType\";\nexport const userRegister = data => {\n  return async dispatch => {\n    /* const config = {\r\n          headers: {\r\n               'Content-Type':'application/josn'\r\n          } \r\n     }\r\n     try{\r\n          const response = await axios.post('/api/messenger/user-register',data,config);\r\n          localStorage.setItem('authToken',response.data.token);\r\n            dispatch({\r\n               type : REGISTER_SUCCESS,\r\n               payload:{\r\n                    successMessage: response.data.successMessage,\r\n                    token : response.data.token\r\n               }\r\n          })\r\n       } catch(error){\r\n           dispatch({\r\n               type: REGISTER_FAIL,\r\n               payload:{\r\n                    error : error.response.data.error.errorMessage \r\n               }\r\n           })\r\n     }*/\n  };\n};\n/*\r\nexport const userLogin = (data) => {\r\n    return async (dispath) => {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('/api/messenger/user-login', data, config);\r\n            localStorage.setItem('authToken', response.data.token);\r\n            dispath({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: {\r\n                    successMessage: response.data.successMessage,\r\n                    token: response.data.token\r\n                }\r\n            })\r\n        } catch (error) {\r\n            dispath({\r\n                type: USER_LOGIN_FAIL,\r\n                payload: {\r\n                    error: error.response.data.error.errorMessage\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const userLogout = () => async(dispatch) => {\r\n     try{\r\n         const response = await axios.post('/api/messenger/user-logout');\r\n         if(response.data.success){\r\n             localStorage.removeItem('authToken');\r\n             dispatch({\r\n                 type : 'LOGOUT_SUCCESS'\r\n             })\r\n         }\r\n\r\n     }catch (error) {\r\n\r\n     }\r\n}\r\n*/","map":{"version":3,"sources":["C:/Users/gameo/Chat/frontend-old/src/store/actions/authActions.js"],"names":["axios","REGISTER_FAIL","REGISTER_SUCCESS","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","userRegister","data","dispatch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAsBC,gBAAtB,EAAuCC,kBAAvC,EAA0DC,eAA1D,QAAgF,mBAAhF;AAEA,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AACjC,SAAO,MAAOC,QAAP,IAAoB;AAEvB;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIM,GA5BD;AA6BJ,CA9BM;AA+BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\r\nimport {REGISTER_FAIL,REGISTER_SUCCESS,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL} from \"../types/authType\";\r\n\r\nexport const userRegister = (data) => {\r\n     return async (dispatch) => {\r\n\r\n         /* const config = {\r\n               headers: {\r\n                    'Content-Type':'application/josn'\r\n               } \r\n          }\r\n          try{\r\n               const response = await axios.post('/api/messenger/user-register',data,config);\r\n               localStorage.setItem('authToken',response.data.token);\r\n\r\n               dispatch({\r\n                    type : REGISTER_SUCCESS,\r\n                    payload:{\r\n                         successMessage: response.data.successMessage,\r\n                         token : response.data.token\r\n                    }\r\n               })\r\n\r\n          } catch(error){\r\n                dispatch({\r\n                    type: REGISTER_FAIL,\r\n                    payload:{\r\n                         error : error.response.data.error.errorMessage \r\n                    }\r\n                })\r\n          }*/\r\n\r\n     }\r\n}\r\n/*\r\nexport const userLogin = (data) => {\r\n    return async (dispath) => {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('/api/messenger/user-login', data, config);\r\n            localStorage.setItem('authToken', response.data.token);\r\n            dispath({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: {\r\n                    successMessage: response.data.successMessage,\r\n                    token: response.data.token\r\n                }\r\n            })\r\n        } catch (error) {\r\n            dispath({\r\n                type: USER_LOGIN_FAIL,\r\n                payload: {\r\n                    error: error.response.data.error.errorMessage\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const userLogout = () => async(dispatch) => {\r\n     try{\r\n         const response = await axios.post('/api/messenger/user-logout');\r\n         if(response.data.success){\r\n             localStorage.removeItem('authToken');\r\n             dispatch({\r\n                 type : 'LOGOUT_SUCCESS'\r\n             })\r\n         }\r\n\r\n     }catch (error) {\r\n\r\n     }\r\n}\r\n*/\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}