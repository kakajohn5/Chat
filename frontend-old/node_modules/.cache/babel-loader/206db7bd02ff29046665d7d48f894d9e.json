{"ast":null,"code":"import axios from 'axios';\nimport { REGISTER_FAIL, REGISTER_SUCCESS, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL } from \"../types/authType\";\nexport const userRegister = data => {\n  return async dispatch => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/josn'\n      }\n    };\n\n    try {\n      const response = await axios.post('/api/med/user-register', data, config);\n      localStorage.setItem('authToken', response.data.token);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: {\n          successMessage: response.data.successMessage,\n          token: response.data.token\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: {\n          error: error.response.data.error.errorMessage\n        }\n      });\n    }\n  };\n};\nexport const userLogin = data => {\n  return async dispath => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const response = await axios.post('/api/messenger/user-login', data, config);\n      localStorage.setItem('authToken', response.data.token);\n      dispath({\n        type: USER_LOGIN_SUCCESS,\n        payload: {\n          successMessage: response.data.successMessage,\n          token: response.data.token\n        }\n      });\n    } catch (error) {\n      dispath({\n        type: USER_LOGIN_FAIL,\n        payload: {\n          error: error.response.data.error.errorMessage\n        }\n      });\n    }\n  };\n};\nexport const userLogout = () => async dispatch => {\n  try {\n    const response = await axios.post('/api/messenger/user-logout');\n\n    if (response.data.success) {\n      localStorage.removeItem('authToken');\n      dispatch({\n        type: 'LOGOUT_SUCCESS'\n      });\n    }\n  } catch (error) {}\n};","map":{"version":3,"sources":["C:/Users/gameo/Chat/frontend-old/src/store/actions/authActions.js"],"names":["axios","REGISTER_FAIL","REGISTER_SUCCESS","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","userRegister","data","dispatch","config","headers","response","post","localStorage","setItem","token","type","payload","successMessage","error","errorMessage","userLogin","dispath","userLogout","success","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAsBC,gBAAtB,EAAuCC,kBAAvC,EAA0DC,eAA1D,QAAgF,mBAAhF;AAEA,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AACjC,SAAO,MAAOC,QAAP,IAAoB;AAEvB,UAAMC,MAAM,GAAG;AACTC,MAAAA,OAAO,EAAE;AACJ,wBAAe;AADX;AADA,KAAf;;AAKC,QAAG;AACE,YAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,wBAAX,EAAoCL,IAApC,EAAyCE,MAAzC,CAAvB;AACAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAiCH,QAAQ,CAACJ,IAAT,CAAcQ,KAA/C;AAEAP,MAAAA,QAAQ,CAAC;AACJQ,QAAAA,IAAI,EAAGb,gBADH;AAEJc,QAAAA,OAAO,EAAC;AACHC,UAAAA,cAAc,EAAEP,QAAQ,CAACJ,IAAT,CAAcW,cAD3B;AAEHH,UAAAA,KAAK,EAAGJ,QAAQ,CAACJ,IAAT,CAAcQ;AAFnB;AAFJ,OAAD,CAAR;AAQJ,KAZD,CAYE,OAAMI,KAAN,EAAY;AACRX,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAEd,aADD;AAELe,QAAAA,OAAO,EAAC;AACHE,UAAAA,KAAK,EAAGA,KAAK,CAACR,QAAN,CAAeJ,IAAf,CAAoBY,KAApB,CAA0BC;AAD/B;AAFH,OAAD,CAAR;AAML;AAEL,GA5BD;AA6BJ,CA9BM;AAgCP,OAAO,MAAMC,SAAS,GAAId,IAAD,IAAU;AAC/B,SAAO,MAAOe,OAAP,IAAmB;AAEtB,UAAMb,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;;AAMA,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,2BAAX,EAAwCL,IAAxC,EAA8CE,MAA9C,CAAvB;AACAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCH,QAAQ,CAACJ,IAAT,CAAcQ,KAAhD;AACAO,MAAAA,OAAO,CAAC;AACJN,QAAAA,IAAI,EAAEZ,kBADF;AAEJa,QAAAA,OAAO,EAAE;AACLC,UAAAA,cAAc,EAAEP,QAAQ,CAACJ,IAAT,CAAcW,cADzB;AAELH,UAAAA,KAAK,EAAEJ,QAAQ,CAACJ,IAAT,CAAcQ;AAFhB;AAFL,OAAD,CAAP;AAOH,KAVD,CAUE,OAAOI,KAAP,EAAc;AACZG,MAAAA,OAAO,CAAC;AACJN,QAAAA,IAAI,EAAEX,eADF;AAEJY,QAAAA,OAAO,EAAE;AACLE,UAAAA,KAAK,EAAEA,KAAK,CAACR,QAAN,CAAeJ,IAAf,CAAoBY,KAApB,CAA0BC;AAD5B;AAFL,OAAD,CAAP;AAMH;AACJ,GA1BD;AA2BH,CA5BM;AA8BP,OAAO,MAAMG,UAAU,GAAG,MAAM,MAAMf,QAAN,IAAmB;AAC9C,MAAG;AACC,UAAMG,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,4BAAX,CAAvB;;AACA,QAAGD,QAAQ,CAACJ,IAAT,CAAciB,OAAjB,EAAyB;AACrBX,MAAAA,YAAY,CAACY,UAAb,CAAwB,WAAxB;AACAjB,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAG;AADF,OAAD,CAAR;AAGH;AAEJ,GATD,CASC,OAAOG,KAAP,EAAc,CAEd;AACL,CAbM","sourcesContent":["import axios from 'axios';\r\nimport {REGISTER_FAIL,REGISTER_SUCCESS,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL} from \"../types/authType\";\r\n\r\nexport const userRegister = (data) => {\r\n     return async (dispatch) => {\r\n\r\n         const config = {\r\n               headers: {\r\n                    'Content-Type':'application/josn'\r\n               } \r\n          }\r\n          try{\r\n               const response = await axios.post('/api/med/user-register',data,config);\r\n               localStorage.setItem('authToken',response.data.token);\r\n\r\n               dispatch({\r\n                    type : REGISTER_SUCCESS,\r\n                    payload:{\r\n                         successMessage: response.data.successMessage,\r\n                         token : response.data.token\r\n                    }\r\n               })\r\n\r\n          } catch(error){\r\n                dispatch({\r\n                    type: REGISTER_FAIL,\r\n                    payload:{\r\n                         error : error.response.data.error.errorMessage \r\n                    }\r\n                })\r\n          }\r\n\r\n     }\r\n}\r\n\r\nexport const userLogin = (data) => {\r\n    return async (dispath) => {\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('/api/messenger/user-login', data, config);\r\n            localStorage.setItem('authToken', response.data.token);\r\n            dispath({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: {\r\n                    successMessage: response.data.successMessage,\r\n                    token: response.data.token\r\n                }\r\n            })\r\n        } catch (error) {\r\n            dispath({\r\n                type: USER_LOGIN_FAIL,\r\n                payload: {\r\n                    error: error.response.data.error.errorMessage\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const userLogout = () => async(dispatch) => {\r\n     try{\r\n         const response = await axios.post('/api/messenger/user-logout');\r\n         if(response.data.success){\r\n             localStorage.removeItem('authToken');\r\n             dispatch({\r\n                 type : 'LOGOUT_SUCCESS'\r\n             })\r\n         }\r\n\r\n     }catch (error) {\r\n\r\n     }\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}